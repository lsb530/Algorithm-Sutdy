# 인덱스로 원소에 접근하기
"""
리스트나 튜플의 원소에 접근할 때는 인덱스(index)를 사용하면 된다.
       0   1   2   3   4   5   6 -------->양수 인덱스 : 맨 앞과 맨 끝을 0부터 1씩 증가
맨 앞 11  22  33  44  55  66  77 맨 끝
      -7  -6  -5  -4  -3  -2  -1 -------->음수 인덱스 : '0 - 전체 원소 수'부터 1씩 증가
"""
x = [11, 22, 33, 44, 55, 66, 77]
print(x[2])
print(x[3])
x[-4] = 3.14
print(x)
# print(x[7])   #오류:존재하지 않는 인덱스
# x[7] = 3.14   #위와 동일
y = (1, 2, 3, 4, 5, 6, 7,)
print(y)
# y[3] = 4  #오류:튜플은 값 변경 X


# 슬라이스식으로 원소에 접근하지
"""
리스트 또는 튜플의 원소 일부를 연속해서 또는 일정한 간격으로 꺼내 새로운 리스트 또는 튜플을 만드는 것을 슬라이스(slice)라고 합니다.
* s[i:j] : s[i]부터 s[j-1]까지 나열한다.
* s[i:j:k] s[i]부터 s[j-1]까지 k씩 건너뛰며 나열한다.
 ★i, j, k를 지정하는 규칙
1. i, j가 len(s)보다 크면 len(s)가 지정된 것으로 간주한다. 인덱스와 달리 범위에서 벗어나는 값을 지정해도 오류가 되지 않는다.
2. i가 없거나 None이면 0이 지정된 것으로 간주한다.
3. j가 없거나 None이면 len(s)가 지정된 것으로 간주한다.
 ★★i, j, k의 값 중에서 1개의 값 이상을 생략하는 패턴들
 패턴                              설명                         실행 예           실행 결과
 s[:]    리스트 s의 원소를 모두 출력한다.                          s[:]    [11,22,33,44,55,66,77]
 s[:n]   리스트 s의 원소 중 맨 앞에서부터 n개까지 출력한다.        s[:3]    [11,22,33]
 s[i:]   리스트 s의 원소 중 s[i]부터 맨 끝까지 출력한다.           s[3:]    [44,55,66,77]
 s[-n:]  리스트 s의 원소 중 맨 끝에서부터 n개까지 출력한다.        s[-3:]   [55,66,77]
 s[::k]  리스트 s의 원소 중 맨 앞에서부터 k개씩 건너뒤며 출력한다. s[::2]   [11,33,55,77]
 s[::-1] 리스트 s의 원소 중 맨 끝에서부터 전부 출력한다.           s[::-1]  [77,66,55,44,33,22,11]
"""
s = [11, 22, 33, 44, 55, 66, 77]
print(s[0:6])
print(s[0:7])
print(s[0:7:2])
print(s[-4:-2])
print(s[3:1])  # 오류는 나지는 않음 대신 빈 배열
