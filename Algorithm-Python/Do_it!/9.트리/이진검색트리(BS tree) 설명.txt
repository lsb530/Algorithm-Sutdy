# 이진검색트리(binary search tree)는 모든 노드가 다음 조건을 만족해야한다.
- 왼쪽 서브트리 노드의 키 값은 자신의 노드 키값보다 작아야 한다.
- 오른쪽 서브트리 노드의 키 값은 자신의 노드 키값보다 커야 한다.

따라서, 키값이 같은 노드는 복수로 존재하지 않는다.
예시)                    11
                      /      \
                    5         15
                   / \       /  \
                  4   7     13  18
                 /   / \   /  \
                1   6   9 12  14
여기서 노드 5에 주목해보면 왼쪽 서브트리의 노드(4,1)은 모두 5보다 작고, 오른쪽 서브트리의 (7,6,9)는 모두 5보다 크다.
물론 다른 노드도 마찬가지이다.
이 이진 검색 트리를 <중위 순회>의 DFS(깊이우선검색)으로 스캔하면 다음과 같은 노드의 키값을 오름차순으로 얻을 수 있다.
        1 -> 4 -> 5 -> 6 -> 7 -> 9 -> 11 -> 12 -> 13 -> 14 -> 15 -> 18
이진 검색 트리는 다음과 같은 특징이 있어서 알고리즘에 폭 넓게 사용되고 있다.

1. 구조가 단순하다
2. 중위 순회의 깊이우선검색을 통하여 노드값을 오름차순으로 얻을 수 있다
3. 이진 검색과 비슷한 방식으로 아주 빠르게 검색할 수 있다
4. 노드를 삽입하기 쉽다

