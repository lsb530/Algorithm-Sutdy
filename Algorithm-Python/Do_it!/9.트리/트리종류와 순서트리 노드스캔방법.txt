# 순서 트리(ordered tree)와 무순서 트리(unordered tree)
: 트리는 형제 노드의 순서 관계가 있는지에 따라 2종류로 분류된다. 형제 노드의 순서 관계가 있으면 순서트리(ordered tree)라 하고,
  구별하지 않으면 무순서 트리(unordered tree)라고 한다.
       X        - 순서트리         X       - 무순서트리
     /   \                      /    \
    Y     Z                    Z      Y

# 순서 트리의 검색
: 순서 트리의 노드를 스캔하는 방법은 크게 2가지이다.
  - 너비 우선 검색(BFS, breadth-first-search)
    : 폭 우선 검색, 가로검색, 수평 검색이라고도 한다. 너비 우선검색은 낮은 레벨부터 왼쪽에서 오른쪽으로 검색하고,
      한 레벨에서 검색을 마치면 다음 레벨로 내려가는 방법이다.
      (A-> B-> C-> D-> E-> F-> G-> H-> I-> J-> K-> L)
                         A
                     /      \
                    B        C
                   / \      / \
                  D   E    F   G
                 /   / \  / \
                H   I   J K  L
  - 깊이 우선 검색(DFS, depth-first-search)
    : 세로 검색, 수직 검색이라고도 한다. 깊이 우선 탐색은 리프에 도달할때까지 아래쪽으로 내려가면서 검색하는 것을
      우선으로 하는 방법이다. 리프에 도달해서 더 이상 검색할 곳이 없으면 일단 부모 노드로 돌아가고 그 뒤, 다시 자식 노드로 내려간다.

                         A
                     /      \
                    B        C
                   / \      / \
                  D   E    F   G
                 /   / \  / \
                H   I   J K  L
    깊이 우선탐색은 각노드를 최대 3번 지나갑니다.
    1. A에서 B로 내려가기 직전에 A를 1번 지나간다
    2. B에서 C로 지나가는 도중에 A를 1번 지나간다
    3. C에서 A로 돌아올때 A를 1번 지나간다

   이때, 어느 시점에 실제로 노드를 방문하느지에 따라 깊이 우선 검색은 세 종류의스캔 방법으로 구분한다.
   * 전위 순회(preorder)
   : 노드 방문 -> 왼쪽 자식 -> 오른쪽 자식
     (A-> B-> D-> H-> E-> I-> J-> C-> F-> K-> L-> G)
   * 중위 순회(inorder)
   : 왼쪽 자식 -> 노드 방문 -> 오른쪽 자식
     (H-> D-> B-> I-> E-> J-> A-> K-> F-> L-> C-> G)
   * 후위 순회(postorder)
   : 왼쪽 자식 -> 오른쪽 자식 -> 노드 방문
     (H-> D-> I-> J-> E-> B-> K-> L-> F-> G-> C-> A)

